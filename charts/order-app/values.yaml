# Default values for order-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

partOf: demo-parent

image:
  repository: dfrey501/order-app
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.0.1-SNAPSHOT-dbf53db

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "order-app-sa"
  clusterRole:
    name: "order-app-cluster-role-namespace-reader"
    apiGroup: ""
    apiGroups:
      - ''
    resources:
      - configmaps
      - secrets
      - pods
    verbs:
      - get
      - list
      - watch
  roleBinding:
    name: "order-app-namespace-reader-binding"

podAnnotations:
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8080"
  prometheus.io/scrape: "true"

podSecurityContext:
  fsGroup: 1000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 500m
  #   memory: 1024Mi
  # requests:
  #   cpu: 500m
  #   memory: 1024Mi


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

springboot:
  ports:
    - name: http
      containerPort: 8080
      protocol: TCP  
  health:
    livenessProbe:
      httpGet:
        path: /actuator/health/liveness
        port: http
      initialDelaySeconds: 20
      periodSeconds: 5
    readinessProbe:
      httpGet:
        path: /actuator/health/readiness
        port: http
      initialDelaySeconds: 60
      periodSeconds: 5

application:
  server.port: 8080
  logging.level:
    org.springframework.data: INFO
    org.springframework.web: INFO
  management: 
    zipkin.tracing.endpoint: http://tempo.observability:9411

serviceBinding:
  postgres:
    secretName: "order-app-db-app-user-db-secret"
  rabbitmq:
    secretName: "demo-rabbitmq-demo-default-user"
